// <auto-generated />
using System;
using MaritimeDataApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaritimeDataApp.Server.Migrations
{
    [DbContext(typeof(MaritimeDbContext))]
    partial class MaritimeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaritimeDataApp.Server.Models.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ports");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Country = "Netherlands",
                            Name = "Port of Rotterdam"
                        },
                        new
                        {
                            Id = 102,
                            Country = "Singapore",
                            Name = "Port of Singapore"
                        },
                        new
                        {
                            Id = 103,
                            Country = "Germany",
                            Name = "Port of Hamburg"
                        },
                        new
                        {
                            Id = 104,
                            Country = "USA",
                            Name = "Port of Los Angeles"
                        },
                        new
                        {
                            Id = 105,
                            Country = "Romania",
                            Name = "Port Constanta"
                        });
                });

            modelBuilder.Entity("MaritimeDataApp.Server.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaxSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxSpeed = 25m,
                            Name = "Ocean Voyager"
                        },
                        new
                        {
                            Id = 2,
                            MaxSpeed = 18m,
                            Name = "Sea Serpent"
                        },
                        new
                        {
                            Id = 3,
                            MaxSpeed = 35m,
                            Name = "Coastal Runner"
                        });
                });

            modelBuilder.Entity("MaritimeDataApp.Server.Models.Voyage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArrivalPortId")
                        .HasColumnType("int");

                    b.Property<int>("DeparturePortId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VoyageDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("VoyageEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("VoyageStart")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalPortId");

                    b.HasIndex("DeparturePortId");

                    b.ToTable("Voyages");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            ArrivalPortId = 103,
                            DeparturePortId = 101,
                            VoyageDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VoyageEnd = new DateTimeOffset(new DateTime(2025, 4, 18, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            VoyageStart = new DateTimeOffset(new DateTime(2025, 4, 15, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 1002,
                            ArrivalPortId = 104,
                            DeparturePortId = 102,
                            VoyageDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VoyageEnd = new DateTimeOffset(new DateTime(2025, 5, 5, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            VoyageStart = new DateTimeOffset(new DateTime(2025, 4, 20, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("MaritimeDataApp.Server.Models.Voyage", b =>
                {
                    b.HasOne("MaritimeDataApp.Server.Models.Port", "ArrivalPort")
                        .WithMany("ArrivingVoyages")
                        .HasForeignKey("ArrivalPortId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaritimeDataApp.Server.Models.Port", "DeparturePort")
                        .WithMany("DepartingVoyages")
                        .HasForeignKey("DeparturePortId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArrivalPort");

                    b.Navigation("DeparturePort");
                });

            modelBuilder.Entity("MaritimeDataApp.Server.Models.Port", b =>
                {
                    b.Navigation("ArrivingVoyages");

                    b.Navigation("DepartingVoyages");
                });
#pragma warning restore 612, 618
        }
    }
}
